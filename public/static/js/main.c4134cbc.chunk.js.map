{"version":3,"sources":["component/EntryList/EntryItem/EntryItem.module.css","component/BudgetOverview/BudgetToast/BudgetToast.module.css","component/EntryList/EntryList.module.css","component/UI/Logo/LogoText/LogoText.module.css","Container/Board/Board.module.css","component/UI/Logo/Logo.module.css","component/UI/Toolbar/Toolbar.module.css","component/BudgetOverview/BudgetOverview.module.css","component/UI/Form/Input/Input.module.css","Container/Auth/Auth.module.css","component/UI/TextContainer/TextContainer.module.css","component/UI/Form/Button/Button.module.css","assets/logo.png","component/UI/Form/Select/Select.module.css","component/NewEntryForm/NewEntryForm.module.css","component/UI/Form/PlusButton/PlusButton.module.css","component/UI/Form/Form.module.css","axios.js","component/UI/Form/Input/Input.js","component/UI/TextContainer/TextContainer.js","component/UI/Form/Button/Button.js","component/UI/Logo/LogoText/LogoText.js","component/UI/Logo/Logo.js","utils.js","Container/Auth/Auth.js","component/UI/Toolbar/Toolbar.js","component/BudgetOverview/BudgetToast/BudgetToast.js","component/BudgetOverview/BudgetOverview.js","component/UI/Form/Select/Select.js","component/UI/Form/PlusButton/PlusButton.js","component/NewEntryForm/NewEntryForm.js","component/EntryList/EntryItem/EntryItem.js","component/EntryList/EntryList.js","Container/Board/Board.js","Container/Auth/LogOut/LogOut.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","input","React","forwardRef","props","ref","inputClasses","classes","Input","invalid","push","formClasses","Invalid","size","Large","Small","entryType","Expense","Income","errorText","withError","errorMessage","className","ErrorMessage","join","type","value","placeholder","onChange","textContainer","TextContainer","style","children","button","Button","onClick","logoText","textJSX","inline","InlineTitle","Fragment","Title","LogoText","logo","Logo","LogoImg","src","logoSrc","alt","formatValue","Math","abs","toFixed","replace","calculatePercentage","total","percentage","round","compareEntries","prev","next","sortMethod","a","b","c","toLowerCase","insertSorted","list","newElement","length","i","splice","getStoredAuth","token","localStorage","getItem","username","storeAuth","setItem","Auth","state","authForm","password","isLoggingIn","componentDidMount","history","updateElement","field","key","newValue","setState","prevState","formIsValid","onSubmitHandler","event","preventDefault","requestBody","url","post","then","response","data","user","catch","error","status","alert","onChangeAuthModeHandler","fontSize","onSubmit","this","e","target","authModeChanger","Component","toolbar","Toolbar","to","LogOut","budgetToast","toastClasses","BudgetToast","percentageClasses","Percentage","Value","budgetOverview","BudgetOverview","income","expense","select","selectClasses","Select","options","map","option","content","plusButton","buttonClasses","PlusButton","OPTIONS","NewEntryForm","useState","setType","valid","description","setDescription","setValue","descriptionInput","useRef","isValid","console","log","parseInt","current","focus","entryItem","valueClasses","EntryItem","Description","Delete","onDeleteEntry","entryList","title","titleClasses","entries","entry","_id","EntryList","Header","Sort","onChangeSortMethod","name","id","defaultChecked","htmlFor","Board","budget","incomeSort","incomeList","expenseSort","expenseList","auth","get","fetchedIncomes","incomes","fetchedExpenses","expenses","sort","incomeTotal","reduce","sum","expenseTotal","budgetTotal","updateTotals","updatedTotals","onAddNewEntry","date","updatedList","delete","index","findIndex","removedElement","Form","BudgetLists","Logout","removeItem","App","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c4134cbc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"EntryItem\":\"EntryItem_EntryItem__3JYAN\",\"Description\":\"EntryItem_Description__3eQUe\",\"Value\":\"EntryItem_Value__24PZB\",\"Expense\":\"EntryItem_Expense__S1z4K\",\"Percentage\":\"EntryItem_Percentage__1hBmF\",\"Delete\":\"EntryItem_Delete__39Ufp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BudgetToast\":\"BudgetToast_BudgetToast__3aEHS\",\"Expense\":\"BudgetToast_Expense__3R7K-\",\"Title\":\"BudgetToast_Title__1ZlYt\",\"Value\":\"BudgetToast_Value__3lKg1\",\"Percentage\":\"BudgetToast_Percentage__lhm83\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EntryList\":\"EntryList_EntryList__1v4Ch\",\"Title\":\"EntryList_Title__2TxVq\",\"Expense\":\"EntryList_Expense__K5t9X\",\"Sort\":\"EntryList_Sort__1F_PF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LogoText\":\"LogoText_LogoText__3ZtIm\",\"Title\":\"LogoText_Title__t6hJU\",\"InlineTitle\":\"LogoText_InlineTitle__1gSOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Board\":\"Board_Board__2IuC6\",\"BudgetOverview\":\"Board_BudgetOverview__2WsC_\",\"BudgetLists\":\"Board_BudgetLists__3IKpV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1c1jk\",\"LogoImg\":\"Logo_LogoImg__2rnlo\",\"LogoText\":\"Logo_LogoText__3MWJk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3IS6a\",\"LogOut\":\"Toolbar_LogOut__3yNOE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BudgetOverview\":\"BudgetOverview_BudgetOverview__1MXkH\",\"Title\":\"BudgetOverview_Title__3mCmZ\",\"Value\":\"BudgetOverview_Value__2Fo9M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1fsVd\",\"ErrorMessage\":\"Input_ErrorMessage__gRCQR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__29SLs\",\"authModeChanger\":\"Auth_authModeChanger__2KNo6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextContainer\":\"TextContainer_TextContainer__24g9n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2QnLE\"};","module.exports = __webpack_public_path__ + \"static/media/logo.175dec45.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__3rrZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewEntryForm\":\"NewEntryForm_NewEntryForm__2Ofby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlusButton\":\"PlusButton_PlusButton__3hP7q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Large\":\"Form_Large__3_SbC\",\"Small\":\"Form_Small__2BK4r\",\"Expense\":\"Form_Expense__2NW9m\",\"Income\":\"Form_Income__140MX\",\"Invalid\":\"Form_Invalid__2PPLW\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://127.0.0.1:8080'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './Input.module.css';\r\nimport formClasses from '../Form.module.css';\r\n\r\nconst input = React.forwardRef( (props, ref) => {\r\n    const inputClasses = [classes.Input];\r\n\r\n    // Add classes accordingly to change appearence\r\n    if (props.invalid) inputClasses.push(formClasses.Invalid);\r\n\r\n    if (props.size === 'large') inputClasses.push(formClasses.Large);\r\n    else if (props.size === 'small') inputClasses.push(formClasses.Small);\r\n\r\n    if (props.entryType === 'expense') inputClasses.push(formClasses.Expense);\r\n    else if (props.entryType === 'income') inputClasses.push(formClasses.Income);\r\n\r\n    let errorText = null;\r\n    if (props.withError || props.errorMessage) {\r\n        errorText = <span className={classes.ErrorMessage}>{props.errorMessage ? props.errorMessage : ' '}</span>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input \r\n                className={inputClasses.join(' ')}\r\n                type={props.type ? props.type : 'text'}\r\n                value={props.value}\r\n                placeholder={props.placeholder}\r\n                ref={ref}\r\n                onChange={props.onChange}/>\r\n\r\n            {errorText}\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default input;","import React from 'react'\r\nimport classes from './TextContainer.module.css'\r\n\r\nconst textContainer = (props) => {\r\n    return (\r\n        <div className={classes.TextContainer} style={props.style}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default textContainer;","import React from 'react';\r\nimport classes from './Button.module.css'\r\n\r\nconst button = (props) => {\r\n    return <button\r\n        className={classes.Button}\r\n        onClick={props.onClick}>\r\n            {props.children}\r\n        </button>\r\n}\r\n\r\nexport default button;","import React from 'react'\r\nimport classes from './LogoText.module.css'\r\n\r\nconst logoText = (props) => {\r\n\r\n    let textJSX;\r\n\r\n    if (!props.inline) {\r\n        textJSX = (\r\n            <React.Fragment>\r\n                <p className={classes.Title}>Budget</p>\r\n                <p className={classes.Title}>Board</p>\r\n            </React.Fragment>\r\n        )\r\n    } else {\r\n        textJSX = <p className={classes.InlineTitle}>BudgetBoard</p>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.LogoText} style={props.style}>\r\n            {textJSX}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default logoText;","import React from 'react'\r\nimport LogoText from './LogoText/LogoText'\r\nimport logoSrc from '../../../assets/logo.png'\r\nimport classes from './Logo.module.css'\r\n\r\nconst logo = (props) => {\r\n    return (\r\n        <div className={classes.Logo} style={props.style}>\r\n            <div className={classes.LogoImg}>\r\n                <img src={logoSrc} alt=\"Logo.png\"/>\r\n            </div>\r\n\r\n            <div className={classes.LogoText}>\r\n                <LogoText inline={props.inline}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default logo;","export const formatValue = function(value, type) {\r\n    let sign, formatedValue;\r\n    \r\n    if (type) {\r\n        sign = type ==='income' ? '+ ' : '- ';\r\n    } else {\r\n        sign = value >= 0 ? '+ ' : '- '; \r\n    }\r\n\r\n    formatedValue = Math.abs(value).toFixed(2);\r\n    formatedValue = formatedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    \r\n    return sign + formatedValue;\r\n}\r\n\r\nexport const calculatePercentage = function(value, total) {\r\n    if (total === 0) return '---';\r\n    if (value === 0) return '0%';\r\n\r\n    let percentage = Math.round(( value / total) * 100);\r\n    if (percentage === 0) percentage = '<1';\r\n\r\n    return percentage +  '%';\r\n}\r\n\r\nexport const compareEntries = (prev, next, sortMethod) => {\r\n    let a = prev[sortMethod], b = next[sortMethod];\r\n\r\n    if (sortMethod === 'description') {\r\n        // Alphabetically Z > A, swap a with b to\r\n        // sort from Z->A to A->Z\r\n        const c = a.toLowerCase();\r\n        a = b.toLowerCase();\r\n        b = c.toLowerCase();\r\n    }\r\n\r\n    if (a > b) return -1;\r\n    if (b > a) return 1;\r\n    return 0\r\n}\r\n\r\nexport const insertSorted = (list, newElement, sortMethod) => {\r\n    if(list.length === 0) {\r\n        list.push(newElement);\r\n    } else {\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (compareEntries(list[i], newElement, sortMethod) > 0) {\r\n                list.splice(i, 0, newElement)\r\n                return list;\r\n            }\r\n        }\r\n        list.push(newElement);\r\n    }\r\n    return list;\r\n}\r\n\r\nexport const getStoredAuth = () => {\r\n    return {\r\n        token: localStorage.getItem('token'),\r\n        username: localStorage.getItem('username')\r\n    };\r\n}\r\n\r\nexport const storeAuth = (token, username) => {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('username', username)\r\n}\r\n\r\nexport const logOut = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userId');\r\n}","import React, { Component } from 'react';\r\nimport axios from '../../axios';\r\nimport Input from '../../component/UI/Form/Input/Input';\r\nimport TextContainer from '../../component/UI/TextContainer/TextContainer';\r\nimport Button from '../../component/UI/Form/Button/Button';\r\nimport Logo from '../../component/UI/Logo/Logo';\r\nimport { getStoredAuth, storeAuth } from '../../utils'\r\nimport classes from './Auth.module.css';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        authForm: {\r\n            username: {\r\n                value: '',\r\n                errorMessage: ''\r\n            },\r\n            password: {\r\n                value: '',\r\n                errorMessage: ''\r\n            },\r\n        },\r\n        isLoggingIn: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // Check for token in localStorage\r\n        const auth = getStoredAuth();\r\n        if (auth.token) {\r\n            this.props.history.replace('/board');\r\n        }\r\n    }\r\n\r\n    // Update nested element\r\n    updateElement = (field, key, newValue) => {\r\n        this.setState( (prevState) => {\r\n            return({\r\n                authForm: {\r\n                    ...prevState.authForm,\r\n                    [field]: {\r\n                        ...prevState.authForm[field],\r\n                        [key]: newValue\r\n                    }\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    formIsValid = () => {\r\n        let formIsValid = true;\r\n\r\n        const authForm = this.state.authForm;\r\n        for (let key in authForm) {\r\n            // If no value was provided, raise error\r\n            if (!authForm[key].value.length) {\r\n                this.updateElement(key, 'errorMessage', `Must provide a ${key}`)\r\n                formIsValid = false;\r\n            } else if (authForm[key].errorMessage){\r\n                this.updateElement(key, 'errorMessage', '');\r\n            }\r\n        }\r\n\r\n        return formIsValid;\r\n    }\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if(this.formIsValid()) {\r\n            const requestBody = {\r\n                username: this.state.authForm.username.value,\r\n                password: this.state.authForm.password.value\r\n            }\r\n            const url = this.state.isLoggingIn ? '/login' : '/signin';\r\n\r\n            axios.post(url, requestBody)\r\n            .then (response => {\r\n                const username = response.data.user.username;\r\n                const token = response.data.token;\r\n\r\n                // Store token in localStorage\r\n                storeAuth(token, username);\r\n\r\n                // Forward user\r\n                this.props.history.replace('/board');\r\n            })\r\n            .catch (error => {\r\n                const response = error.response;\r\n                if (response && response.status === 400) {\r\n                    const field = response.data[0].field;\r\n                    const errorMessage = response.data[0].error;\r\n\r\n                    this.updateElement(field, 'errorMessage', errorMessage);\r\n                } else {\r\n                    alert('Could not connect to database....')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {isLoggingIn: !prevState.isLoggingIn}\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <TextContainer>\r\n                    <Logo style={{fontSize:'2em'}}></Logo>\r\n\r\n                    <form onSubmit={this.onSubmitHandler}>\r\n                        \r\n                        <Input\r\n                            value={this.state.authForm.username.value}\r\n                            withError\r\n                            invalid={this.state.authForm.username.errorMessage !== ''}\r\n                            errorMessage={this.state.authForm.username.errorMessage}\r\n                            placeholder='Username'\r\n                            onChange={e => this.updateElement('username', 'value', e.target.value)}/>\r\n\r\n                        <Input\r\n                            type=\"password\"\r\n                            value={this.state.authForm.password.value}\r\n                            withError\r\n                            invalid={this.state.authForm.password.errorMessage !== ''}\r\n                            errorMessage={this.state.authForm.password.errorMessage}\r\n                            placeholder='Password'\r\n                            onChange={e => this.updateElement('password', 'value', e.target.value)}/>\r\n\r\n                        <Button>{this.state.isLoggingIn ? \"Log In\" : \"Sign In\"}</Button>\r\n                    </form>\r\n\r\n                    <div className={classes.authModeChanger}>\r\n                        <p>\r\n                            {this.state.isLoggingIn ? \"No account yet? \" : \"Already have an account \"}\r\n                            <span onClick={this.onChangeAuthModeHandler}>\r\n                                {this.state.isLoggingIn ? \"Create one!\" : \"Log in!\"}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </TextContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Auth;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './Toolbar.module.css'\r\nimport Logo from '../../UI/Logo/Logo'\r\n\r\nconst toolbar = (props) => {\r\n    return (\r\n        <header className={classes.Toolbar}>\r\n            <div className={classes.Logo}>\r\n                <Logo style={{fontSize:\"0.5em\"}} inline/>\r\n            </div>\r\n\r\n            <div>\r\n                <p>\r\n                    Logged as {props.username}. <Link to=\"/logout\"><span className={classes.LogOut}>Leave.</span></Link>\r\n                </p>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './BudgetToast.module.css';\r\n\r\nconst budgetToast = (props) => {\r\n    let toastClasses = [classes.BudgetToast, 'clearfix'];\r\n    let percentageClasses = [classes.Percentage];\r\n\r\n    // Add class accordingly to change appearence\r\n    if (props.type === \"expense\") {\r\n        toastClasses.push(classes.Expense);\r\n        percentageClasses.push(classes.Expense);\r\n    }\r\n    return (\r\n        <div className={toastClasses.join(' ')}>\r\n            <div className={classes.Title}>{props.type}</div>\r\n            <div className='right'>\r\n                <div className={classes.Value}>{props.value}</div>\r\n                <div className={percentageClasses.join(' ')}>{props.percentage}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default budgetToast;","import React from 'react';\r\nimport BudgetToast from './BudgetToast/BudgetToast';\r\nimport {formatValue, calculatePercentage} from '../../utils';\r\nimport classes from './BudgetOverview.module.css';\r\n\r\nconst budgetOverview = (props) => {\r\n    return (\r\n        <div className={classes.BudgetOverview}>\r\n            <div className={classes.Title}>\r\n                Your current budget:\r\n            </div>\r\n            \r\n            <div className={classes.Value}>{formatValue(props.total)}</div>\r\n            \r\n            <BudgetToast \r\n                type=\"income\"\r\n                value={formatValue(props.income, 'income')}/>\r\n            <BudgetToast\r\n                type=\"expense\"\r\n                value={formatValue(props.expense, 'expense')}\r\n                percentage={calculatePercentage(props.expense,props.income)}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default budgetOverview;","import React from 'react';\r\nimport classes from './Select.module.css'\r\nimport formClasses from '../Form.module.css'\r\n\r\nconst select = (props) => {\r\n    const selectClasses = [classes.Select];\r\n\r\n    // Add class accordingly to change appearence\r\n    if (props.entryType === 'expense') selectClasses.push(formClasses.Expense);\r\n    else if (props.entryType === 'income') selectClasses.push(formClasses.Income);\r\n\r\n    return (\r\n        <select className={selectClasses.join(' ')} onChange={props.onChange}>\r\n            {props.options.map( option => {\r\n                return (\r\n                    <option key={option.value} value={option.value}>{option.content}</option>\r\n                )\r\n            })}\r\n        </select>\r\n    )\r\n\r\n}\r\n\r\nexport default select;","import React from 'react';\r\nimport classes from './PlusButton.module.css';\r\nimport formClasses from '../Form.module.css'\r\n\r\nconst plusButton = (props) => {\r\n    const buttonClasses = [classes.PlusButton];\r\n\r\n    // Add class accordingly to change appearence\r\n    if (props.entryType === 'expense') buttonClasses.push(formClasses.Expense);\r\n    else if (props.entryType === 'income') buttonClasses.push(formClasses.Income);\r\n\r\n    return (\r\n        <button className={buttonClasses.join(' ')}><i className=\"fas fa-plus\"></i></button>\r\n    )\r\n}\r\n\r\nexport default plusButton;","import React, { useRef, useState } from 'react';\r\nimport Input from '../UI/Form/Input/Input';\r\nimport Select from '../UI/Form/Select/Select';\r\nimport classes from './NewEntryForm.module.css';\r\nimport PlusButton from '../UI/Form/PlusButton/PlusButton'\r\n\r\nconst OPTIONS = [{\r\n    value: 'income',\r\n    content: 'Income'\r\n},{\r\n    value: 'expense',\r\n    content: 'Expense'\r\n}]\r\n\r\nconst NewEntryForm = (props) => {\r\n    const [type, setType] = useState('income');\r\n    const [description, setDescription] = useState({value:'', valid:true});\r\n    const [value, setValue] = useState({value:'', valid:true});\r\n    const descriptionInput = useRef();\r\n\r\n    const clearInputs = () => {\r\n        setDescription({value:'', valid:true});\r\n        setValue({value:'', valid:true});\r\n    }\r\n\r\n    const formIsValid = () => {\r\n        let isValid = true;\r\n\r\n        if (!description.value.length) {\r\n            setDescription({...description, valid:false});\r\n            isValid=false;\r\n        }\r\n\r\n        if (!value.value.length) {\r\n            setValue({...value, valid:false});\r\n            isValid=false;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (formIsValid()) {\r\n            console.log('submiting')\r\n            props.onSubmit(type, description.value, parseInt(value.value));\r\n            clearInputs();\r\n            descriptionInput.current.focus();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className={classes.NewEntryForm}>\r\n            <Select\r\n                options={OPTIONS}\r\n                entryType={type}\r\n                onChange={e => setType(e.target.value)}/>\r\n\r\n            <Input\r\n                value={description.value}\r\n                invalid={!description.valid}\r\n                placeholder='Add a description'\r\n                size=\"large\"\r\n                entryType={type}\r\n                ref={descriptionInput}\r\n                onChange={e => setDescription({value:e.target.value, valid:true})}/>\r\n            \r\n            <Input \r\n                value={value.value}\r\n                type='number'\r\n                invalid={!value.valid}\r\n                placeholder='Value'\r\n                size=\"small\"\r\n                entryType={type}\r\n                onChange={e => setValue({value:e.target.value, valid:true})}/>\r\n\r\n            <PlusButton entryType={type}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewEntryForm;","import React from 'react';\r\nimport { formatValue } from '../../../utils';\r\nimport classes from './EntryItem.module.css';\r\n\r\nconst entryItem = (props) => {\r\n    const valueClasses = [classes.Value], percentageClasses = [classes.Percentage];\r\n\r\n    if (props.type === 'expense') {\r\n        valueClasses.push(classes.Expense);\r\n        percentageClasses.push(classes.Expense);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.EntryItem + ' clearfix'}>\r\n            <div className={classes.Description}>{props.description}</div>\r\n\r\n            <div className={'right'}>\r\n                <div className={valueClasses.join(' ')}>{formatValue(props.value, props.type)}</div>\r\n                <div className={percentageClasses.join(' ')}>{props.percentage}</div>\r\n                <div className={classes.Delete}>\r\n                    <button onClick={props.onDeleteEntry}><i className=\"far fa-trash-alt\"></i></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default entryItem;","import React from 'react';\r\nimport EntryItem from './EntryItem/EntryItem';\r\nimport classes from './EntryList.module.css';\r\nimport { calculatePercentage } from '../../utils';\r\n\r\nconst entryList = (props) => {\r\n    let title = 'Income', titleClasses = [classes.Title];\r\n\r\n    // Add class accordingly to change appearence\r\n    if (props.type ==='expense') {\r\n        title = 'Expense';\r\n        titleClasses.push(classes.Expense);\r\n    }\r\n\r\n    const entries = props.list.map( entry => {\r\n        return (\r\n            <EntryItem\r\n                key={entry._id}\r\n                description={entry.description}\r\n                value={entry.value}\r\n                percentage={calculatePercentage(entry.value, props.total)}\r\n                onDeleteEntry={() => props.onDeleteEntry(entry._id, props.type)}\r\n                type={props.type}/>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className={classes.EntryList}>\r\n            <div className={classes.Header + ' clearfix'}>\r\n                <div className={titleClasses.join(' ')}>{title}</div>\r\n\r\n                <div className={classes.Sort} onChange={(e) => props.onChangeSortMethod(props.type, e.target.value)}>\r\n                        <input type=\"radio\" name={`${props.type}_sort`} id={`${props.type}_sort_date`} defaultChecked value=\"date\"/>\r\n                        <label htmlFor={`${props.type}_sort_date`}><i className=\"far fa-calendar-alt\"></i></label>\r\n\r\n                        <input type=\"radio\" name={`${props.type}_sort`} id={`${props.type}_sort_description`} value=\"description\"/>\r\n                        <label htmlFor={`${props.type}_sort_description`}><i className=\"fas fa-sort-alpha-down\"></i></label>\r\n\r\n                        <input type=\"radio\" name={`${props.type}_sort`} id={`${props.type}_sort_value`} value=\"value\"/>\r\n                        <label htmlFor={`${props.type}_sort_value`}><i className=\"fas fa-dollar-sign\"></i></label>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                {entries}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default entryList;","import React, { Component } from 'react';\r\nimport Toolbar from '../../component/UI/Toolbar/Toolbar'\r\nimport BudgetOverview from '../../component/BudgetOverview/BudgetOverview';\r\nimport NewEntryForm from '../../component/NewEntryForm/NewEntryForm';\r\nimport EntryList from '../../component/EntryList/EntryList';\r\nimport classes from './Board.module.css';\r\nimport axios from '../../axios';\r\nimport { compareEntries, insertSorted, getStoredAuth } from '../../utils';\r\n\r\nclass Board extends Component {\r\n    state = {\r\n        username: '',\r\n        budget: 0,\r\n        income: 0,\r\n        expense: 0,\r\n        incomeSort: 'date',\r\n        incomeList: [],\r\n        expenseSort: 'date',\r\n        expenseList: [],\r\n        token: ''\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // Check if token stored in localStorage\r\n        const auth = getStoredAuth();\r\n        if (!auth.token) {\r\n            this.props.history.replace('/');\r\n        }\r\n\r\n        axios.get('/all-entries?auth=' + auth.token)\r\n        .then( response => {\r\n            const fetchedIncomes = response.data.incomes;\r\n            const fetchedExpenses = response.data.expenses;\r\n\r\n            fetchedIncomes.sort( (a, b) => compareEntries(a,b, this.state.incomeSort))\r\n            fetchedExpenses.sort( (a, b) => compareEntries(a,b, this.state.expenseSort))\r\n\r\n            const incomeTotal = fetchedIncomes.reduce( (sum, income) => sum += income.value, 0);\r\n            const expenseTotal = fetchedExpenses.reduce( (sum, expense) => sum += expense.value, 0);\r\n            const budgetTotal = incomeTotal - expenseTotal;\r\n\r\n            this.setState({\r\n                username: auth.username,\r\n                budget: budgetTotal,\r\n                income: incomeTotal,\r\n                expense: expenseTotal,\r\n                incomeList: fetchedIncomes,\r\n                expenseList: fetchedExpenses,\r\n                token: auth.token\r\n            })\r\n        })\r\n        .catch( error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    // Update overview values\r\n    updateTotals = (type, value) => {\r\n        const updatedTotals = {\r\n            budget: this.state.budget,\r\n            income: this.state.income,\r\n            expense: this.state.expense\r\n        }\r\n\r\n        updatedTotals[`${type}`] += value;\r\n        updatedTotals.budget = updatedTotals.income - updatedTotals.expense;\r\n\r\n        this.setState({...updatedTotals});\r\n    }\r\n\r\n    onAddNewEntry = (type, description, value) => {\r\n        axios.post(`/${type}?auth=${this.state.token}`, {description, value})\r\n        .then( response => {\r\n            const _id = response.data._id;\r\n            const date = response.data.date;\r\n\r\n            const updatedList = [\r\n                ...this.state[`${type}List`]\r\n            ]\r\n            \r\n            const newEntry = {\r\n                description,\r\n                value,\r\n                date,\r\n                _id\r\n            }\r\n\r\n            insertSorted(updatedList, newEntry, this.state[`${type}Sort`]);\r\n            \r\n            this.setState({\r\n                [`${type}List`]: updatedList\r\n            })\r\n\r\n            this.updateTotals(type, value);\r\n        })\r\n        .catch( e => {\r\n            console.log(e);\r\n\r\n            if (e.response.data) {\r\n                alert(e.response.data)\r\n            } else {\r\n                alert('Could not connect to database....')\r\n            }\r\n        })\r\n    }\r\n\r\n    onDeleteEntry = (_id, type) => {\r\n        console.log(type)\r\n        axios.delete(`/${type}/${_id}?auth=${this.state.token}`)\r\n        .then( response => {\r\n            const updatedList = [...this.state[`${type}List`]]\r\n\r\n            const index = updatedList.findIndex( (entry) => entry._id === _id);\r\n\r\n            const removedElement = updatedList.splice(index, 1)[0];\r\n\r\n            this.setState({[`${type}List`]: updatedList})\r\n\r\n            this.updateTotals(type, -removedElement.value);\r\n        })\r\n        .catch( e => {\r\n            console.log(e.response);\r\n            if (e.response) {\r\n                alert(e.response.data)\r\n            } else {\r\n                alert('Could not connect to database....')\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    onChangeSortMethod = (type, sortMethod) => {\r\n        let updatedList = [...this.state[`${type}List`]];\r\n\r\n        updatedList.sort( (a, b) => compareEntries(a,b, sortMethod))\r\n\r\n        this.setState({\r\n            [`${type}List`]: updatedList,\r\n            [`${type}Sort`]: sortMethod})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Board}>\r\n                <Toolbar username={this.state.username}/>\r\n\r\n                <div className={classes.BudgetOverview}>\r\n                    <BudgetOverview\r\n                        total={this.state.budget}\r\n                        income={this.state.income}\r\n                        expense={this.state.expense}/>\r\n                </div>\r\n\r\n                <div className={classes.Form}>\r\n                    <NewEntryForm onSubmit={this.onAddNewEntry}/>\r\n                </div>\r\n\r\n                <div className={classes.BudgetLists}>\r\n                    <EntryList type='income' \r\n                        sort={this.state.incomeSort} \r\n                        list={this.state.incomeList} \r\n                        total={this.state.income} \r\n                        onDeleteEntry={this.onDeleteEntry} \r\n                        onChangeSortMethod={this.onChangeSortMethod}/>\r\n\r\n                    <EntryList type='expense' \r\n                        sort={this.state.expenseSort}\r\n                        list={this.state.expenseList}\r\n                        total={this.state.income}\r\n                        onDeleteEntry={this.onDeleteEntry}\r\n                        onChangeSortMethod={this.onChangeSortMethod}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { logOut } from '../../../utils';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount () {\r\n        logOut()\r\n    }\r\n    render () {\r\n        return <Redirect to=\"/\"/>;\r\n    }\r\n}\r\n\r\nexport default Logout;","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Auth from './Container/Auth/Auth';\nimport Board from './Container/Board/Board';\nimport LogOut from './Container/Auth/LogOut/LogOut'\n\nclass App extends Component{\n  render () {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path='/board' component={Board}/>\n          <Route path=\"/logout\" component={LogOut}/>\n          <Route path='/' exact component={Auth}/>\n          <Redirect to='/'/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}